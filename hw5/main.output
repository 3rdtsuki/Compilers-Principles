Terminals unused in grammar

    QUOTA


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: LBRACE statements RBRACE
    5          | function
    6          | instruction
    7          | scanf_statement
    8          | printf_statement
    9          | if_else_statement
   10          | while_statement
   11          | for_statement
   12          | return_statement
   13          | equation SEMICOLON
   14          | declare_list SEMICOLON

   15 instruction: type declare_list SEMICOLON

   16 declare_list: ID
   17             | ID ASSIGN expr
   18             | declare_list COMMA ID
   19             | declare_list COMMA ID ASSIGN expr

   20 if_else_statement: IF bool_statement statement
   21                  | IF bool_statement statement ELSE statement

   22 while_statement: WHILE bool_statement statement

   23 bool_statement: LPAREN bool_expr RPAREN

   24 for_statement: FOR LPAREN declare_list SEMICOLON bool_expr SEMICOLON equation RPAREN statement
   25              | FOR LPAREN type declare_list SEMICOLON bool_expr SEMICOLON equation RPAREN statement

   26 return_statement: RETURN expr SEMICOLON

   27 printf_statement: PRINTF LPAREN STRING COMMA ID RPAREN SEMICOLON

   28 scanf_statement: SCANF LPAREN STRING COMMA GET_ADDR ID RPAREN SEMICOLON

   29 bool_expr: TRUE
   30          | FALSE
   31          | expr EQUAL expr
   32          | expr LARGER expr
   33          | expr SMALLER expr
   34          | expr LARGER_EQUAL expr
   35          | expr SMALLER_EQUAL expr
   36          | expr NOT_EQUAL expr
   37          | bool_expr AND bool_expr
   38          | bool_expr OR bool_expr
   39          | NOT bool_expr

   40 expr: ID
   41     | INTEGER
   42     | expr ADD expr
   43     | expr SUB expr
   44     | expr MUL expr
   45     | expr DIV expr
   46     | expr MOD expr
   47     | SUB expr

   48 equation: ID ADD_SELF expr
   49         | ID SUB_SELF expr
   50         | ID ADD_ONE
   51         | ID SUB_ONE

   52 type: INT
   53     | VOID
   54     | CHAR
   55     | STRING

   56 parameter_list: parameter
   57               | parameter_list COMMA parameter

   58 parameter: type ID

   59 function: type ID LPAREN parameter_list RPAREN statement
   60         | type ID LPAREN RPAREN statement


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID (258) 16 17 18 19 27 28 40 48 49 50 51 58 59 60
    INTEGER (259) 41
    STRING (260) 27 28 55
    IF (261) 20 21
    ELSE (262) 21
    WHILE (263) 22
    FOR (264) 24 25
    RETURN (265) 26
    INT (266) 52
    VOID (267) 53
    CHAR (268) 54
    LPAREN (269) 23 24 25 27 28 59 60
    RPAREN (270) 23 24 25 27 28 59 60
    LBRACE (271) 4
    RBRACE (272) 4
    SEMICOLON (273) 13 14 15 24 25 26 27 28
    COMMA (274) 18 19 27 28 57
    QUOTA (275)
    GET_ADDR (276) 28
    TRUE (277) 29
    FALSE (278) 30
    NOT (279) 39
    ADD_ONE (280) 50
    SUB_ONE (281) 51
    ADD_SELF (282) 48
    SUB_SELF (283) 49
    MUL (284) 44
    DIV (285) 45
    MOD (286) 46
    ADD (287) 42
    SUB (288) 43 47
    LARGER (289) 32
    SMALLER (290) 33
    LARGER_EQUAL (291) 34
    SMALLER_EQUAL (292) 35
    NOT_EQUAL (293) 36
    EQUAL (294) 31
    AND (295) 37
    OR (296) 38
    ASSIGN (297) 17 19
    PRINTF (298) 27
    SCANF (299) 28
    LOWER_THEN_ELSE (300)
    UMINUS (301)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    program (48)
        on left: 1
        on right: 0
    statements (49)
        on left: 2 3
        on right: 1 3 4
    statement (50)
        on left: 4 5 6 7 8 9 10 11 12 13 14
        on right: 2 3 20 21 22 24 25 59 60
    instruction (51)
        on left: 15
        on right: 6
    declare_list (52)
        on left: 16 17 18 19
        on right: 14 15 18 19 24 25
    if_else_statement (53)
        on left: 20 21
        on right: 9
    while_statement (54)
        on left: 22
        on right: 10
    bool_statement (55)
        on left: 23
        on right: 20 21 22
    for_statement (56)
        on left: 24 25
        on right: 11
    return_statement (57)
        on left: 26
        on right: 12
    printf_statement (58)
        on left: 27
        on right: 8
    scanf_statement (59)
        on left: 28
        on right: 7
    bool_expr (60)
        on left: 29 30 31 32 33 34 35 36 37 38 39
        on right: 23 24 25 37 38 39
    expr (61)
        on left: 40 41 42 43 44 45 46 47
        on right: 17 19 26 31 32 33 34 35 36 42 43 44 45 46 47 48 49
    equation (62)
        on left: 48 49 50 51
        on right: 13 24 25
    type (63)
        on left: 52 53 54 55
        on right: 15 25 58 59 60
    parameter_list (64)
        on left: 56 57
        on right: 57 59
    parameter (65)
        on left: 58
        on right: 56 57
    function (66)
        on left: 59 60
        on right: 5


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    RETURN  shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9
    LBRACE  shift, and go to state 10
    PRINTF  shift, and go to state 11
    SCANF   shift, and go to state 12

    program            go to state 13
    statements         go to state 14
    statement          go to state 15
    instruction        go to state 16
    declare_list       go to state 17
    if_else_statement  go to state 18
    while_statement    go to state 19
    for_statement      go to state 20
    return_statement   go to state 21
    printf_statement   go to state 22
    scanf_statement    go to state 23
    equation           go to state 24
    type               go to state 25
    function           go to state 26


State 1

   16 declare_list: ID .
   17             | ID . ASSIGN expr
   48 equation: ID . ADD_SELF expr
   49         | ID . SUB_SELF expr
   50         | ID . ADD_ONE
   51         | ID . SUB_ONE

    ADD_ONE   shift, and go to state 27
    SUB_ONE   shift, and go to state 28
    ADD_SELF  shift, and go to state 29
    SUB_SELF  shift, and go to state 30
    ASSIGN    shift, and go to state 31

    $default  reduce using rule 16 (declare_list)


State 2

   55 type: STRING .

    $default  reduce using rule 55 (type)


State 3

   20 if_else_statement: IF . bool_statement statement
   21                  | IF . bool_statement statement ELSE statement

    LPAREN  shift, and go to state 32

    bool_statement  go to state 33


State 4

   22 while_statement: WHILE . bool_statement statement

    LPAREN  shift, and go to state 32

    bool_statement  go to state 34


State 5

   24 for_statement: FOR . LPAREN declare_list SEMICOLON bool_expr SEMICOLON equation RPAREN statement
   25              | FOR . LPAREN type declare_list SEMICOLON bool_expr SEMICOLON equation RPAREN statement

    LPAREN  shift, and go to state 35


State 6

   26 return_statement: RETURN . expr SEMICOLON

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 39


State 7

   52 type: INT .

    $default  reduce using rule 52 (type)


State 8

   53 type: VOID .

    $default  reduce using rule 53 (type)


State 9

   54 type: CHAR .

    $default  reduce using rule 54 (type)


State 10

    4 statement: LBRACE . statements RBRACE

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    RETURN  shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9
    LBRACE  shift, and go to state 10
    PRINTF  shift, and go to state 11
    SCANF   shift, and go to state 12

    statements         go to state 40
    statement          go to state 15
    instruction        go to state 16
    declare_list       go to state 17
    if_else_statement  go to state 18
    while_statement    go to state 19
    for_statement      go to state 20
    return_statement   go to state 21
    printf_statement   go to state 22
    scanf_statement    go to state 23
    equation           go to state 24
    type               go to state 25
    function           go to state 26


State 11

   27 printf_statement: PRINTF . LPAREN STRING COMMA ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 41


State 12

   28 scanf_statement: SCANF . LPAREN STRING COMMA GET_ADDR ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 42


State 13

    0 $accept: program . $end

    $end  shift, and go to state 43


State 14

    1 program: statements .
    3 statements: statements . statement

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    RETURN  shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9
    LBRACE  shift, and go to state 10
    PRINTF  shift, and go to state 11
    SCANF   shift, and go to state 12

    $default  reduce using rule 1 (program)

    statement          go to state 44
    instruction        go to state 16
    declare_list       go to state 17
    if_else_statement  go to state 18
    while_statement    go to state 19
    for_statement      go to state 20
    return_statement   go to state 21
    printf_statement   go to state 22
    scanf_statement    go to state 23
    equation           go to state 24
    type               go to state 25
    function           go to state 26


State 15

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 16

    6 statement: instruction .

    $default  reduce using rule 6 (statement)


State 17

   14 statement: declare_list . SEMICOLON
   18 declare_list: declare_list . COMMA ID
   19             | declare_list . COMMA ID ASSIGN expr

    SEMICOLON  shift, and go to state 45
    COMMA      shift, and go to state 46


State 18

    9 statement: if_else_statement .

    $default  reduce using rule 9 (statement)


State 19

   10 statement: while_statement .

    $default  reduce using rule 10 (statement)


State 20

   11 statement: for_statement .

    $default  reduce using rule 11 (statement)


State 21

   12 statement: return_statement .

    $default  reduce using rule 12 (statement)


State 22

    8 statement: printf_statement .

    $default  reduce using rule 8 (statement)


State 23

    7 statement: scanf_statement .

    $default  reduce using rule 7 (statement)


State 24

   13 statement: equation . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 25

   15 instruction: type . declare_list SEMICOLON
   59 function: type . ID LPAREN parameter_list RPAREN statement
   60         | type . ID LPAREN RPAREN statement

    ID  shift, and go to state 48

    declare_list  go to state 49


State 26

    5 statement: function .

    $default  reduce using rule 5 (statement)


State 27

   50 equation: ID ADD_ONE .

    $default  reduce using rule 50 (equation)


State 28

   51 equation: ID SUB_ONE .

    $default  reduce using rule 51 (equation)


State 29

   48 equation: ID ADD_SELF . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 50


State 30

   49 equation: ID SUB_SELF . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 51


State 31

   17 declare_list: ID ASSIGN . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 52


State 32

   23 bool_statement: LPAREN . bool_expr RPAREN

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 38

    bool_expr  go to state 56
    expr       go to state 57


State 33

   20 if_else_statement: IF bool_statement . statement
   21                  | IF bool_statement . statement ELSE statement

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    RETURN  shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9
    LBRACE  shift, and go to state 10
    PRINTF  shift, and go to state 11
    SCANF   shift, and go to state 12

    statement          go to state 58
    instruction        go to state 16
    declare_list       go to state 17
    if_else_statement  go to state 18
    while_statement    go to state 19
    for_statement      go to state 20
    return_statement   go to state 21
    printf_statement   go to state 22
    scanf_statement    go to state 23
    equation           go to state 24
    type               go to state 25
    function           go to state 26


State 34

   22 while_statement: WHILE bool_statement . statement

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    RETURN  shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9
    LBRACE  shift, and go to state 10
    PRINTF  shift, and go to state 11
    SCANF   shift, and go to state 12

    statement          go to state 59
    instruction        go to state 16
    declare_list       go to state 17
    if_else_statement  go to state 18
    while_statement    go to state 19
    for_statement      go to state 20
    return_statement   go to state 21
    printf_statement   go to state 22
    scanf_statement    go to state 23
    equation           go to state 24
    type               go to state 25
    function           go to state 26


State 35

   24 for_statement: FOR LPAREN . declare_list SEMICOLON bool_expr SEMICOLON equation RPAREN statement
   25              | FOR LPAREN . type declare_list SEMICOLON bool_expr SEMICOLON equation RPAREN statement

    ID      shift, and go to state 60
    STRING  shift, and go to state 2
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9

    declare_list  go to state 61
    type          go to state 62


State 36

   40 expr: ID .

    $default  reduce using rule 40 (expr)


State 37

   41 expr: INTEGER .

    $default  reduce using rule 41 (expr)


State 38

   47 expr: SUB . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 63


State 39

   26 return_statement: RETURN expr . SEMICOLON
   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr

    SEMICOLON  shift, and go to state 64
    MUL        shift, and go to state 65
    DIV        shift, and go to state 66
    MOD        shift, and go to state 67
    ADD        shift, and go to state 68
    SUB        shift, and go to state 69


State 40

    3 statements: statements . statement
    4 statement: LBRACE statements . RBRACE

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    RETURN  shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9
    LBRACE  shift, and go to state 10
    RBRACE  shift, and go to state 70
    PRINTF  shift, and go to state 11
    SCANF   shift, and go to state 12

    statement          go to state 44
    instruction        go to state 16
    declare_list       go to state 17
    if_else_statement  go to state 18
    while_statement    go to state 19
    for_statement      go to state 20
    return_statement   go to state 21
    printf_statement   go to state 22
    scanf_statement    go to state 23
    equation           go to state 24
    type               go to state 25
    function           go to state 26


State 41

   27 printf_statement: PRINTF LPAREN . STRING COMMA ID RPAREN SEMICOLON

    STRING  shift, and go to state 71


State 42

   28 scanf_statement: SCANF LPAREN . STRING COMMA GET_ADDR ID RPAREN SEMICOLON

    STRING  shift, and go to state 72


State 43

    0 $accept: program $end .

    $default  accept


State 44

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 45

   14 statement: declare_list SEMICOLON .

    $default  reduce using rule 14 (statement)


State 46

   18 declare_list: declare_list COMMA . ID
   19             | declare_list COMMA . ID ASSIGN expr

    ID  shift, and go to state 73


State 47

   13 statement: equation SEMICOLON .

    $default  reduce using rule 13 (statement)


State 48

   16 declare_list: ID .
   17             | ID . ASSIGN expr
   59 function: type ID . LPAREN parameter_list RPAREN statement
   60         | type ID . LPAREN RPAREN statement

    LPAREN  shift, and go to state 74
    ASSIGN  shift, and go to state 31

    $default  reduce using rule 16 (declare_list)


State 49

   15 instruction: type declare_list . SEMICOLON
   18 declare_list: declare_list . COMMA ID
   19             | declare_list . COMMA ID ASSIGN expr

    SEMICOLON  shift, and go to state 75
    COMMA      shift, and go to state 46


State 50

   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr
   48 equation: ID ADD_SELF expr .

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67
    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 48 (equation)


State 51

   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr
   49 equation: ID SUB_SELF expr .

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67
    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 49 (equation)


State 52

   17 declare_list: ID ASSIGN expr .
   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67
    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 17 (declare_list)


State 53

   29 bool_expr: TRUE .

    $default  reduce using rule 29 (bool_expr)


State 54

   30 bool_expr: FALSE .

    $default  reduce using rule 30 (bool_expr)


State 55

   39 bool_expr: NOT . bool_expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 38

    bool_expr  go to state 76
    expr       go to state 57


State 56

   23 bool_statement: LPAREN bool_expr . RPAREN
   37 bool_expr: bool_expr . AND bool_expr
   38          | bool_expr . OR bool_expr

    RPAREN  shift, and go to state 77
    AND     shift, and go to state 78
    OR      shift, and go to state 79


State 57

   31 bool_expr: expr . EQUAL expr
   32          | expr . LARGER expr
   33          | expr . SMALLER expr
   34          | expr . LARGER_EQUAL expr
   35          | expr . SMALLER_EQUAL expr
   36          | expr . NOT_EQUAL expr
   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr

    MUL            shift, and go to state 65
    DIV            shift, and go to state 66
    MOD            shift, and go to state 67
    ADD            shift, and go to state 68
    SUB            shift, and go to state 69
    LARGER         shift, and go to state 80
    SMALLER        shift, and go to state 81
    LARGER_EQUAL   shift, and go to state 82
    SMALLER_EQUAL  shift, and go to state 83
    NOT_EQUAL      shift, and go to state 84
    EQUAL          shift, and go to state 85


State 58

   20 if_else_statement: IF bool_statement statement .
   21                  | IF bool_statement statement . ELSE statement

    ELSE  shift, and go to state 86

    $default  reduce using rule 20 (if_else_statement)


State 59

   22 while_statement: WHILE bool_statement statement .

    $default  reduce using rule 22 (while_statement)


State 60

   16 declare_list: ID .
   17             | ID . ASSIGN expr

    ASSIGN  shift, and go to state 31

    $default  reduce using rule 16 (declare_list)


State 61

   18 declare_list: declare_list . COMMA ID
   19             | declare_list . COMMA ID ASSIGN expr
   24 for_statement: FOR LPAREN declare_list . SEMICOLON bool_expr SEMICOLON equation RPAREN statement

    SEMICOLON  shift, and go to state 87
    COMMA      shift, and go to state 46


State 62

   25 for_statement: FOR LPAREN type . declare_list SEMICOLON bool_expr SEMICOLON equation RPAREN statement

    ID  shift, and go to state 60

    declare_list  go to state 88


State 63

   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr
   47     | SUB expr .

    $default  reduce using rule 47 (expr)


State 64

   26 return_statement: RETURN expr SEMICOLON .

    $default  reduce using rule 26 (return_statement)


State 65

   44 expr: expr MUL . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 89


State 66

   45 expr: expr DIV . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 90


State 67

   46 expr: expr MOD . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 91


State 68

   42 expr: expr ADD . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 92


State 69

   43 expr: expr SUB . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 93


State 70

    4 statement: LBRACE statements RBRACE .

    $default  reduce using rule 4 (statement)


State 71

   27 printf_statement: PRINTF LPAREN STRING . COMMA ID RPAREN SEMICOLON

    COMMA  shift, and go to state 94


State 72

   28 scanf_statement: SCANF LPAREN STRING . COMMA GET_ADDR ID RPAREN SEMICOLON

    COMMA  shift, and go to state 95


State 73

   18 declare_list: declare_list COMMA ID .
   19             | declare_list COMMA ID . ASSIGN expr

    ASSIGN  shift, and go to state 96

    $default  reduce using rule 18 (declare_list)


State 74

   59 function: type ID LPAREN . parameter_list RPAREN statement
   60         | type ID LPAREN . RPAREN statement

    STRING  shift, and go to state 2
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9
    RPAREN  shift, and go to state 97

    type            go to state 98
    parameter_list  go to state 99
    parameter       go to state 100


State 75

   15 instruction: type declare_list SEMICOLON .

    $default  reduce using rule 15 (instruction)


State 76

   37 bool_expr: bool_expr . AND bool_expr
   38          | bool_expr . OR bool_expr
   39          | NOT bool_expr .

    AND  shift, and go to state 78
    OR   shift, and go to state 79

    $default  reduce using rule 39 (bool_expr)


State 77

   23 bool_statement: LPAREN bool_expr RPAREN .

    $default  reduce using rule 23 (bool_statement)


State 78

   37 bool_expr: bool_expr AND . bool_expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 38

    bool_expr  go to state 101
    expr       go to state 57


State 79

   38 bool_expr: bool_expr OR . bool_expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 38

    bool_expr  go to state 102
    expr       go to state 57


State 80

   32 bool_expr: expr LARGER . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 103


State 81

   33 bool_expr: expr SMALLER . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 104


State 82

   34 bool_expr: expr LARGER_EQUAL . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 105


State 83

   35 bool_expr: expr SMALLER_EQUAL . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 106


State 84

   36 bool_expr: expr NOT_EQUAL . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 107


State 85

   31 bool_expr: expr EQUAL . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 108


State 86

   21 if_else_statement: IF bool_statement statement ELSE . statement

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    RETURN  shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9
    LBRACE  shift, and go to state 10
    PRINTF  shift, and go to state 11
    SCANF   shift, and go to state 12

    statement          go to state 109
    instruction        go to state 16
    declare_list       go to state 17
    if_else_statement  go to state 18
    while_statement    go to state 19
    for_statement      go to state 20
    return_statement   go to state 21
    printf_statement   go to state 22
    scanf_statement    go to state 23
    equation           go to state 24
    type               go to state 25
    function           go to state 26


State 87

   24 for_statement: FOR LPAREN declare_list SEMICOLON . bool_expr SEMICOLON equation RPAREN statement

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 38

    bool_expr  go to state 110
    expr       go to state 57


State 88

   18 declare_list: declare_list . COMMA ID
   19             | declare_list . COMMA ID ASSIGN expr
   25 for_statement: FOR LPAREN type declare_list . SEMICOLON bool_expr SEMICOLON equation RPAREN statement

    SEMICOLON  shift, and go to state 111
    COMMA      shift, and go to state 46


State 89

   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   44     | expr MUL expr .
   45     | expr . DIV expr
   46     | expr . MOD expr

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 44 (expr)


State 90

   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   45     | expr DIV expr .
   46     | expr . MOD expr

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 45 (expr)


State 91

   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr
   46     | expr MOD expr .

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 46 (expr)


State 92

   42 expr: expr . ADD expr
   42     | expr ADD expr .
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr

    $default  reduce using rule 42 (expr)


State 93

   42 expr: expr . ADD expr
   43     | expr . SUB expr
   43     | expr SUB expr .
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr

    $default  reduce using rule 43 (expr)


State 94

   27 printf_statement: PRINTF LPAREN STRING COMMA . ID RPAREN SEMICOLON

    ID  shift, and go to state 112


State 95

   28 scanf_statement: SCANF LPAREN STRING COMMA . GET_ADDR ID RPAREN SEMICOLON

    GET_ADDR  shift, and go to state 113


State 96

   19 declare_list: declare_list COMMA ID ASSIGN . expr

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    SUB      shift, and go to state 38

    expr  go to state 114


State 97

   60 function: type ID LPAREN RPAREN . statement

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    RETURN  shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9
    LBRACE  shift, and go to state 10
    PRINTF  shift, and go to state 11
    SCANF   shift, and go to state 12

    statement          go to state 115
    instruction        go to state 16
    declare_list       go to state 17
    if_else_statement  go to state 18
    while_statement    go to state 19
    for_statement      go to state 20
    return_statement   go to state 21
    printf_statement   go to state 22
    scanf_statement    go to state 23
    equation           go to state 24
    type               go to state 25
    function           go to state 26


State 98

   58 parameter: type . ID

    ID  shift, and go to state 116


State 99

   57 parameter_list: parameter_list . COMMA parameter
   59 function: type ID LPAREN parameter_list . RPAREN statement

    RPAREN  shift, and go to state 117
    COMMA   shift, and go to state 118


State 100

   56 parameter_list: parameter .

    $default  reduce using rule 56 (parameter_list)


State 101

   37 bool_expr: bool_expr . AND bool_expr
   37          | bool_expr AND bool_expr .
   38          | bool_expr . OR bool_expr

    $default  reduce using rule 37 (bool_expr)


State 102

   37 bool_expr: bool_expr . AND bool_expr
   38          | bool_expr . OR bool_expr
   38          | bool_expr OR bool_expr .

    $default  reduce using rule 38 (bool_expr)


State 103

   32 bool_expr: expr LARGER expr .
   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67
    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 32 (bool_expr)


State 104

   33 bool_expr: expr SMALLER expr .
   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67
    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 33 (bool_expr)


State 105

   34 bool_expr: expr LARGER_EQUAL expr .
   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67
    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 34 (bool_expr)


State 106

   35 bool_expr: expr SMALLER_EQUAL expr .
   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67
    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 35 (bool_expr)


State 107

   36 bool_expr: expr NOT_EQUAL expr .
   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67
    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 36 (bool_expr)


State 108

   31 bool_expr: expr EQUAL expr .
   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67
    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 31 (bool_expr)


State 109

   21 if_else_statement: IF bool_statement statement ELSE statement .

    $default  reduce using rule 21 (if_else_statement)


State 110

   24 for_statement: FOR LPAREN declare_list SEMICOLON bool_expr . SEMICOLON equation RPAREN statement
   37 bool_expr: bool_expr . AND bool_expr
   38          | bool_expr . OR bool_expr

    SEMICOLON  shift, and go to state 119
    AND        shift, and go to state 78
    OR         shift, and go to state 79


State 111

   25 for_statement: FOR LPAREN type declare_list SEMICOLON . bool_expr SEMICOLON equation RPAREN statement

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 38

    bool_expr  go to state 120
    expr       go to state 57


State 112

   27 printf_statement: PRINTF LPAREN STRING COMMA ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 121


State 113

   28 scanf_statement: SCANF LPAREN STRING COMMA GET_ADDR . ID RPAREN SEMICOLON

    ID  shift, and go to state 122


State 114

   19 declare_list: declare_list COMMA ID ASSIGN expr .
   42 expr: expr . ADD expr
   43     | expr . SUB expr
   44     | expr . MUL expr
   45     | expr . DIV expr
   46     | expr . MOD expr

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67
    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 19 (declare_list)


State 115

   60 function: type ID LPAREN RPAREN statement .

    $default  reduce using rule 60 (function)


State 116

   58 parameter: type ID .

    $default  reduce using rule 58 (parameter)


State 117

   59 function: type ID LPAREN parameter_list RPAREN . statement

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    RETURN  shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9
    LBRACE  shift, and go to state 10
    PRINTF  shift, and go to state 11
    SCANF   shift, and go to state 12

    statement          go to state 123
    instruction        go to state 16
    declare_list       go to state 17
    if_else_statement  go to state 18
    while_statement    go to state 19
    for_statement      go to state 20
    return_statement   go to state 21
    printf_statement   go to state 22
    scanf_statement    go to state 23
    equation           go to state 24
    type               go to state 25
    function           go to state 26


State 118

   57 parameter_list: parameter_list COMMA . parameter

    STRING  shift, and go to state 2
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9

    type       go to state 98
    parameter  go to state 124


State 119

   24 for_statement: FOR LPAREN declare_list SEMICOLON bool_expr SEMICOLON . equation RPAREN statement

    ID  shift, and go to state 125

    equation  go to state 126


State 120

   25 for_statement: FOR LPAREN type declare_list SEMICOLON bool_expr . SEMICOLON equation RPAREN statement
   37 bool_expr: bool_expr . AND bool_expr
   38          | bool_expr . OR bool_expr

    SEMICOLON  shift, and go to state 127
    AND        shift, and go to state 78
    OR         shift, and go to state 79


State 121

   27 printf_statement: PRINTF LPAREN STRING COMMA ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 128


State 122

   28 scanf_statement: SCANF LPAREN STRING COMMA GET_ADDR ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 129


State 123

   59 function: type ID LPAREN parameter_list RPAREN statement .

    $default  reduce using rule 59 (function)


State 124

   57 parameter_list: parameter_list COMMA parameter .

    $default  reduce using rule 57 (parameter_list)


State 125

   48 equation: ID . ADD_SELF expr
   49         | ID . SUB_SELF expr
   50         | ID . ADD_ONE
   51         | ID . SUB_ONE

    ADD_ONE   shift, and go to state 27
    SUB_ONE   shift, and go to state 28
    ADD_SELF  shift, and go to state 29
    SUB_SELF  shift, and go to state 30


State 126

   24 for_statement: FOR LPAREN declare_list SEMICOLON bool_expr SEMICOLON equation . RPAREN statement

    RPAREN  shift, and go to state 130


State 127

   25 for_statement: FOR LPAREN type declare_list SEMICOLON bool_expr SEMICOLON . equation RPAREN statement

    ID  shift, and go to state 125

    equation  go to state 131


State 128

   27 printf_statement: PRINTF LPAREN STRING COMMA ID RPAREN SEMICOLON .

    $default  reduce using rule 27 (printf_statement)


State 129

   28 scanf_statement: SCANF LPAREN STRING COMMA GET_ADDR ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 132


State 130

   24 for_statement: FOR LPAREN declare_list SEMICOLON bool_expr SEMICOLON equation RPAREN . statement

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    RETURN  shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9
    LBRACE  shift, and go to state 10
    PRINTF  shift, and go to state 11
    SCANF   shift, and go to state 12

    statement          go to state 133
    instruction        go to state 16
    declare_list       go to state 17
    if_else_statement  go to state 18
    while_statement    go to state 19
    for_statement      go to state 20
    return_statement   go to state 21
    printf_statement   go to state 22
    scanf_statement    go to state 23
    equation           go to state 24
    type               go to state 25
    function           go to state 26


State 131

   25 for_statement: FOR LPAREN type declare_list SEMICOLON bool_expr SEMICOLON equation . RPAREN statement

    RPAREN  shift, and go to state 134


State 132

   28 scanf_statement: SCANF LPAREN STRING COMMA GET_ADDR ID RPAREN SEMICOLON .

    $default  reduce using rule 28 (scanf_statement)


State 133

   24 for_statement: FOR LPAREN declare_list SEMICOLON bool_expr SEMICOLON equation RPAREN statement .

    $default  reduce using rule 24 (for_statement)


State 134

   25 for_statement: FOR LPAREN type declare_list SEMICOLON bool_expr SEMICOLON equation RPAREN . statement

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    RETURN  shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    CHAR    shift, and go to state 9
    LBRACE  shift, and go to state 10
    PRINTF  shift, and go to state 11
    SCANF   shift, and go to state 12

    statement          go to state 135
    instruction        go to state 16
    declare_list       go to state 17
    if_else_statement  go to state 18
    while_statement    go to state 19
    for_statement      go to state 20
    return_statement   go to state 21
    printf_statement   go to state 22
    scanf_statement    go to state 23
    equation           go to state 24
    type               go to state 25
    function           go to state 26


State 135

   25 for_statement: FOR LPAREN type declare_list SEMICOLON bool_expr SEMICOLON equation RPAREN statement .

    $default  reduce using rule 25 (for_statement)
